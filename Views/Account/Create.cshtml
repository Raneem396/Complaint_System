@model ComplaintManagementPortal2.Models.CreateUserViewModel
@{
    ViewBag.Title = "Add Administrator";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div id="page-wrapper">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">Administrators</h1>
        </div>
        <!-- /.col-lg-12 -->
    </div>
    <!-- /.row -->

    <div class="row operation-row">
        <div class="col-lg-12">
            <ul class="breadcrumb">
                <li><a href="@Url.Action("Index", "Dashboard")">Home</a></li>
                <li><a href="@Url.Action("Index", "Account")">Administrators</a></li>
                <li class="active">Add Administrator</li>
            </ul>
        </div>
        <!-- /.col-lg-12 -->
    </div>
    <!-- /.row -->

    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-lg-12">
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.FullName) *
                                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email) *
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Password) *
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.RoleName) *
                                    @Html.DropDownList("RoleName", Model.AllRoles, "Select Role", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <button type="submit" value="Create" class="btn btn-primary">Save</button>
                                    <button type="reset" class="btn btn-default">Reset </button>
                                </div>
                            }
                        </div>
                        <!-- /.col-lg-12 -->
                    </div>
                    <!-- /.row (nested) -->
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->

        </div>
        <!-- /.col-lg-12 -->
    </div>
    <!-- /.row -->
</div>
<!-- /#page-wrapper -->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

